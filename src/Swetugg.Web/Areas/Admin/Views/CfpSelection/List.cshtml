@using Swetugg.Web.Models

@{
    ViewBag.Title = "Call for Papers";
    var conference = (Conference)ViewBag.Conference;
}


<ol class="breadcrumb">
    <li>@Html.ActionLink("Start", "Start", "Home", new { Area = "" }, null)</li>
    <li>@Html.ActionLink("Conferences", "Index", "ConferenceAdmin")</li>
    <li>@Html.ActionLink(conference.Name, "Conference", "ConferenceAdmin", new { conference.Id }, null)</li>
    <li>@Html.ActionLink("Call For Papers", "Index", "CfpReview")</li>
    <li class="active">Selection</li>
</ol>

<h2>Call For Papers - Selection</h2>

<div id="jsGrid"></div>

@section scripts
{
	<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js"></script>


	<script>
		var controller = {
			loadData: function (filter) {
				var d = $.Deferred();

				$.ajax({
					url: "/admin/@conference.Slug/cfp/api/sessions",
					dataType: "json"
				}).done(function (response) {
					var filterIsEmpty =
						!filter.Title &&
							!filter.Title &&
							!filter.Speaker &&
							!filter.Level &&
							!filter.SessionType &&
							!filter.Tags &&
							!filter.Audience &&
							!filter.Notes &&
							!filter.Status &&
							!filter.IsDecided;

					var filteredData = $.grep(response,
						function (session) {
							return filterIsEmpty ||
								((!filter.Title || session.Title && session.Title.toLowerCase().indexOf(filter.Title.toLowerCase()) > -1) &&
								(!filter.Speaker || session.Speaker && session.Speaker.toLowerCase().indexOf(filter.Speaker.toLowerCase()) > -1) &&
								(!filter.Level || session.Level && session.Level.toLowerCase().indexOf(filter.Level.toLowerCase()) > -1) &&
								(!filter.SessionType || session.SessionType && session.SessionType.indexOf(filter.SessionType.toLowerCase()) > -1) &&
								(!filter.Tags || session.Tags && session.Tags.toLowerCase().indexOf(filter.Tags.toLowerCase()) > -1) &&
								(!filter.Audience || session.Audience && session.Audience.toLowerCase().indexOf(filter.Audience.toLowerCase()) > -1) &&
								(!filter.Notes || session.Notes && session.Notes.toLowerCase().indexOf(filter.Notes.toLowerCase()) > -1) &&
								(!filter.Status || session.Status && session.Status.indexOf(filter.Status) > -1) &&
								(filter.IsDecided == undefined || session.IsDecided === filter.IsDecided));
						});

					d.resolve(filteredData);
				});

				return d.promise();
			},
			insertItem: $.noop,
			updateItem: function (item) {
				var d = $.Deferred();

				$.post({
					url: "/admin/@conference.Slug/cfp/update",
					data: item
				}).done(function (response) {
					d.resolve(response);
				});

				return d.promise();
			},
			deleteItem: $.noop
		};

		var sessionTypeRenderer = function (value, item) {
			var code = "?";

			if (value === "session") code = "S";
			if (value === "session-discussion") code = "D";
			if (value === "new-talent") code = "N";

			return "<td>" + code + "</td>";
		}

		var speakerRenderer = function (value, item) {
			return $("<td>")
				.append($("<a>")
					.attr("href", "/admin/@conference.Slug/cfp/speaker/" + item.SpeakerId)
				.text(value));
		}

		var sessionRenderer = function (value, item) {
			return $("<td>")
				.append($("<a>")
					.attr("href", "/admin/@conference.Slug/cfp/session/" + item.Id)
				.text(value));
		}

		$("#jsGrid").jsGrid({
			width: "100%",
			height: "400px",

			css: "table",

			inserting: false,
			editing: true,
			sorting: true,
			paging: true,

			filtering: true,

			autoload: true,

			controller: controller,

			fields: [
				{ name: "Title", type: "text", width: 250, validate: "required", cellRenderer: sessionRenderer },
				{ name: "Speaker", type: "text", width: 100, cellRenderer: speakerRenderer },
				{ name: "Level", type: "text", width: 75 },
				{ name: "SessionType", title: "Type", type: "text", width: 50, cellRenderer: sessionTypeRenderer },
				{ name: "Tags", title: "Tags", type: "text", width: 75 },
				{ name: "Audience", title: "Audience", type: "text", width: 75 },
				{ name: "Notes", title: "Notes", type: "text", width: 150 },
				{
					name: "Status",
					title: "Yes/No",
					type: "select",
					items: [
						{ Name: "", Value: "" },
						{ Name: "Yes", Value: "Yes" },
						{ Name: "No", Value: "No" }
					],
					textField: "Name",
					valueField: "Value",
					with: 50
				},
				{ name: "IsDecided", title: "Done", type: "checkbox", width: 50 },
				{ type: "control", editButton: true, deleteButton: false, clearFilterButton: false, modeSwitchButton: false }
			]
		});
	</script>

}
