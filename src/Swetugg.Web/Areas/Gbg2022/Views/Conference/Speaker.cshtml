@using Swetugg.Web.Controllers
@using Swetugg.Web.Helpers
@model Swetugg.Web.Models.Speaker

@{
    var fbAppId = ViewData["FacebookAppId"];
    ViewBag.Title = "Speaker";

    var speakerImageUrl = string.Empty;
    var firstThumb = Model.Images.FirstOrDefault(i => i.ImageType.Slug == "thumb");
    if (firstThumb != null)
    {
        speakerImageUrl = firstThumb.ImageUrl;
    }
    var tagClasses = Model.Tags.Select(t => "tag-" + t.Slug).ToArray();
}

<script>!function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0], p = /^http:/.test(d.location) ? 'http' : 'https'; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = p + '://platform.twitter.com/widgets.js'; fjs.parentNode.insertBefore(js, fjs); } }(document, 'script', 'twitter-wjs');</script>

<section id="info" class="content-section text-center speaker">
    <div class="program-section">
        <div class="container">
            <div class="row">
                <div class="col-xs-12 text-center">
                    <div class="photo">
                        @foreach (var tagClass in tagClasses)
                        {
                            <span class="@tagClass"></span>
                        }
                        <img class="img-circle @string.Join(" ", tagClasses)" src="@speakerImageUrl" />
                    </div>
                    <h1 style="margin-top: 20px;">@Model.Name</h1>
                    <h2>@Model.Company</h2>
                </div>
            </div>

        </div>
    </div>
</section>

<section class="content-section">
    <div class="program-section" style="background-color: white; padding-top: 40px;">
        <div class="container">
            @foreach (var session in @Model.Sessions.Select(s => s.Session))
            {
                <div id="@session.Slug" style="position: relative; top: -60px"></div>
                <div class="row">
                    <div class="col-lg-8 col-lg-offset-2">
                        @{
                var nameText = "Don't miss \"{0}\"";
                if (!string.IsNullOrEmpty(Model.Twitter))
                {
                    nameText = nameText + " with @" + Model.Twitter;
                }
                var twitterText = nameText + " at @Swetugg 2020!";
                var avail = 229 - twitterText.Length;
                var roomSlot = session.RoomSlots.FirstOrDefault();

                twitterText = string.Format(
                    twitterText,
                    (session.Name.Length <= avail) ? session.Name : session.Name.Substring(0, avail - 3) + "..."
                    );
                var linkUrl = Url.Action("Speaker", "Conference", null, Request.Url.Scheme) + "#" + session.Slug;
                        }
                        <a href="#@session.Slug">
                            <h2>
                                @session.Name<br/>
                                @if (roomSlot != null)
                                {
                                    var start = roomSlot.Start ?? roomSlot.Slot.Start;
                                    var end = roomSlot.End ?? roomSlot.Slot.End;
                                    <small>
                                        @roomSlot.Room.Name, @start.ToString("dddd HH:mm") - @end.ToString("HH:mm")
                                    </small>
                                }
                            </h2>
                        </a>
                        @if (session.VideoPublished && !string.IsNullOrWhiteSpace(session.VideoUrl))
                        {
                            <div class="embed-responsive embed-responsive-16by9">
                                <iframe src="@session.VideoUrl" allowfullscreen></iframe>
                            </div>
                        }
                        <p>
                            @Html.Raw(Html.FromMarkdown(session.Description))
                        </p>
                        <div style="margin-bottom: 2em">
                            <div class="pull-left" style="margin-right: 5px; margin-top:2px">
                                <a href="https://twitter.com/share" class="twitter-share-button" data-url="@linkUrl" data-text="@twitterText">Tweet</a>
                            </div>
                            <div class="fb-like" data-href="@linkUrl" data-layout="standard" data-action="like" data-show-faces="false" data-share="true"></div>
                        </div>
                    </div>
                </div>
            }

            <div class="row">
                <div class="col-lg-8 col-lg-offset-2">
                    <h2>@Model.Name</h2>
                    <p>
                        @Html.Raw(Html.FromMarkdown(Model.Bio))
                    </p>
                </div>
            </div>

        </div>
    </div>
</section>


@section meta {
    @{
        var session = Model.Sessions.Select(s => s.Session).FirstOrDefault();
        var speakerUrl = Url.Action("Speaker", "Conference", null, Request.Url.Scheme);
    }

    @if (session != null)
    {
        var sessionUrl = speakerUrl + "#" + session.Slug;

        <meta property="og:url" content="@sessionUrl" />
        <meta property="og:title" content="@Model.Name - @session.Name" />
        <meta property="og:description" content="@session.Description" />
        if (session.VideoPublished && !string.IsNullOrWhiteSpace(session.VideoUrl))
        {
            var youtubeId = session.VideoUrl.Substring(session.VideoUrl.LastIndexOf("/", StringComparison.InvariantCultureIgnoreCase) + 1);

            <meta property="og:type" content="article"/>

            <meta property="og:image" content="https://i1.ytimg.com/vi/@(youtubeId)/hqdefault.jpg"/>
            @*
                <meta property="og:video" content="https://www.youtube.com/e/@(youtubeId)?autoplay=1"/>
                <meta property="og:video:secure_url" content="https://www.youtube.com/e/@(youtubeId)?autoplay=1"/>
            *@
        }
        else
        {
            <meta property="og:image" content="@speakerImageUrl" />
        }
    }
    else
    {
        <meta property="og:url" content="@speakerUrl" />
        <meta property="og:image" content="@speakerImageUrl" />
        <meta property="og:title" content="@Model.Name" />
        <meta property="og:description" content="@Model.Bio" />
    }
}